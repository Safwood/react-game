{"version":3,"sources":["components/Square.jsx","components/Board.jsx","components/Game.jsx","components/Header.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","isActive","onClick","value","Board","useState","currentPlayer","setCurrentPlayer","Array","fill","squares","setSquare","winner","setWinner","draw","setDraw","isSquareActive","setSquareActive","changeCurrentPlayer","letter","includes","newWinner","lines","i","length","a","b","c","calculateWinner","activeSquares","calculateActiveSquares","currentSuares","Object","assign","forEach","el","renderSquare","currentSquares","slice","handleClick","Game","Header","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fe9dc16.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Square = (props) => {\r\n  return (\r\n    <button className={\"Square\" + `${props.isActive ? \" \" + props.isActive : \"\"}`} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;","import React, { useState } from 'react';\r\nimport Square from \"./Square\"\r\n\r\nconst Board = (props) => {\r\n  const [currentPlayer, setCurrentPlayer] = useState('Current player: X');\r\n  const [squares, setSquare] = useState(Array(9).fill(null));\r\n  const [winner, setWinner] = useState(null);\r\n  const [draw, setDraw] = useState(false);\r\n  const [isSquareActive, setSquareActive] = useState(null);\r\n  // {\r\n  //   '0': false,\r\n  //   '1': false,\r\n  //   '2': false,\r\n  //   '3': false,\r\n  //   '4': false,\r\n  //   '5': false,\r\n  //   '6': false,\r\n  //   '7': false,\r\n  //   '8': false\r\n  // }\r\n\r\n  const changeCurrentPlayer = (letter) => {\r\n    setCurrentPlayer(`Current player: ${letter}`);\r\n  };\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function calculateActiveSquares(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return [a, b, c];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const handleClick = (i) => {\r\n    let currentSquares = squares.slice();\r\n\r\n    if(winner) {\r\n      return\r\n    } else {\r\n      if(currentPlayer === 'Current player: X') {\r\n        currentSquares[i] = \"X\";\r\n        setSquare(currentSquares);\r\n        changeCurrentPlayer(\"O\")\r\n      } else {\r\n        currentSquares[i] = \"O\";\r\n        setSquare(currentSquares);\r\n        changeCurrentPlayer(\"X\")\r\n      }\r\n    }\r\n  }\r\n\r\n  if (winner == null && !squares.includes(null) && !draw) {\r\n    setDraw(true);\r\n  }\r\n  \r\n\r\n  let newWinner = calculateWinner(squares);\r\n  let activeSquares = calculateActiveSquares(squares);\r\n\r\n  if(newWinner && newWinner !== winner ) {\r\n    setWinner(newWinner);\r\n  }\r\n\r\n  if(activeSquares && !isSquareActive) {\r\n    const currentSuares = Object.assign({}, isSquareActive);\r\n    activeSquares.forEach(el => {\r\n      currentSuares[el] = \"Active\"\r\n    })\r\n\r\n    activeSquares = null;\r\n    setSquareActive(currentSuares);\r\n  }\r\n\r\n  const renderSquare = (i) => {\r\n    return <Square value={squares[i]} onClick={() => handleClick(i)} isActive={isSquareActive ? isSquareActive[i] : \"\"}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"Status\">{winner ? `The winner is ${winner}` : currentPlayer}</div>\r\n      <div className=\"Board-row\">\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div className=\"Board-row\">\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div className=\"Board-row\">\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n      <div className=\"Draw\">{draw ? \"It's a draw\" : null}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n\r\n","\r\nimport React from 'react';\r\nimport Board from \"./Board\"\r\n\r\nconst Game = (props) => {\r\n  return (\r\n    <div className=\"Game\">\r\n      <div className=\"Game-board\">\r\n        <Board />\r\n      </div>\r\n      <div className=\"Game-info\">\r\n        <div>{/* status */}</div>\r\n        <ol>{/* TODO */}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"Header\">\r\n      \r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      \r\n    </footer>\r\n  )\r\n}\r\n\r\n\r\nexport default Footer;","import './css/App.css';\nimport './css/Header.css';\nimport './css/Footer.css';\nimport './css/App.css';\nimport './css/Square.css';\nimport './css/Board.css';\nimport './css/Game.css';\nimport Game from \"./components/Game\"\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"Main\"><Game /></main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}